import streamlit as st
import pandas as pd
import os

st.set_page_config(page_title="–ë—É–Ω–∫–µ—Ä ‚Äî –ü–∞–Ω–µ–ª—å –∏–≥—Ä–æ–∫–æ–≤", layout="wide")
st.title("üé≤ –ë—É–Ω–∫–µ—Ä ‚Äî –ü–∞–Ω–µ–ª—å –∏–≥—Ä–æ–∫–æ–≤")

# üìÅ –§–∞–π–ª, –≤ –∫–æ—Ç–æ—Ä—ã–π —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∏–≥—Ä–æ–∫–∏
DATA_FILE = "players.csv"

# üìÑ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã
columns = [
    "–ò–º—è", "–ü—Ä–æ—Ñ–µ—Å—Å–∏—è", "–ü–æ–ª / –í–æ–∑—Ä–∞—Å—Ç",
    "–ó–¥–æ—Ä–æ–≤—å–µ", "–•–æ–±–±–∏", "–ë–∞–≥–∞–∂", "–§–æ–±–∏—è", "–§–∞–∫—Ç"
]

# üì• –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞
def load_data():
    if os.path.exists(DATA_FILE):
        return pd.read_csv(DATA_FILE)
    else:
        return pd.DataFrame(columns=columns)

# üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª
def save_data(df):
    df.to_csv(DATA_FILE, index=False)

# üîë –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
role = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å", ["–ò–≥—Ä–æ–∫", "–í–µ–¥—É—â–∏–π"])

if role == "–í–µ–¥—É—â–∏–π":
    password = st.sidebar.text_input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å", type="password", placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –≤–µ–¥—É—â–µ–≥–æ")
    if password != "admin123":
        st.warning("–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        st.stop()
    else:
        st.sidebar.success("–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ –í–µ–¥—É—â–∏–π.")
else:
    st.sidebar.info("–í—ã –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ –∫–∞–∫ –ò–≥—Ä–æ–∫ (—Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å–º–æ—Ç—Ä).")

# üé® –¢–µ–º–Ω–∞—è —Ç–µ–º–∞
st.markdown("""
    <style>
        body { background-color: #0e1117; color: #fafafa; }
        .stApp { background-color: #0e1117; }
        .stTextInput>div>div>input,
        .stNumberInput>div>input {
            background-color: #1e1e1e;
            color: white;
        }
        .stDataFrame, .stDataEditor {
            background-color: #1e1e1e;
            color: white;
        }
    </style>
""", unsafe_allow_html=True)

# üì¶ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
if "players_df" not in st.session_state:
    st.session_state.players_df = load_data()

# ‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
if role == "–í–µ–¥—É—â–∏–π":
    with st.expander("‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞"):
        with st.form("add_player_form"):
            name_input = st.text_input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏–≥—Ä–æ–∫–∞")
            submitted = st.form_submit_button("–î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞")
            if submitted:
                name = name_input.strip()
                if not name:
                    st.warning("–ò–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")
                elif name in st.session_state.players_df["–ò–º—è"].values:
                    st.warning("–ò–≥—Ä–æ–∫ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
                else:
                    new_row = pd.DataFrame([[name] + [""] * (len(columns) - 1)], columns=columns)
                    st.session_state.players_df = pd.concat([st.session_state.players_df, new_row], ignore_index=True)
                    save_data(st.session_state.players_df)
                    st.success(f"–ò–≥—Ä–æ–∫ {name} –¥–æ–±–∞–≤–ª–µ–Ω!")

# üìã –¢–∞–±–ª–∏—Ü–∞ –∏–≥—Ä–æ–∫–æ–≤
st.subheader("üìã –¢–∞–±–ª–∏—Ü–∞ –∏–≥—Ä–æ–∫–æ–≤")

if role == "–í–µ–¥—É—â–∏–π":
    st.info("–†–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä–æ–∫–æ–≤ –ø—Ä—è–º–æ –≤ —Ç–∞–±–ª–∏—Ü–µ:")

    # üìù –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–∞—è —Ç–∞–±–ª–∏—Ü–∞
    edited_df = st.data_editor(
        st.session_state.players_df,
        num_rows="fixed",
        use_container_width=True
    )
    if not edited_df.equals(st.session_state.players_df):
        st.session_state.players_df = edited_df
        save_data(st.session_state.players_df)

    st.write("---")

    # ‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤
    st.subheader("üóëÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
    to_delete = []
    for idx, name in enumerate(st.session_state.players_df["–ò–º—è"]):
        checked = st.checkbox(f"{name}", key=f"del_{idx}")
        if checked:
            to_delete.append(idx)

    if st.button("–£–¥–∞–ª–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤"):
        if to_delete:
            st.session_state.players_df = st.session_state.players_df.drop(to_delete).reset_index(drop=True)
            save_data(st.session_state.players_df)
            st.success(f"–£–¥–∞–ª–µ–Ω–æ –∏–≥—Ä–æ–∫–æ–≤: {len(to_delete)}")
            for idx in to_delete:
                del st.session_state[f"del_{idx}"]
        else:
            st.warning("–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")

    # üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ–π —Ç–∞–±–ª–∏—Ü—ã
    if st.button("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª–Ω–æ—Å—Ç—å—é"):
        st.session_state.players_df = pd.DataFrame(columns=columns)
        save_data(st.session_state.players_df)
        st.success("–¢–∞–±–ª–∏—Ü–∞ –æ—á–∏—â–µ–Ω–∞.")

else:
    # üëÄ –¢–æ–ª—å–∫–æ –ø—Ä–æ—Å–º–æ—Ç—Ä –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤
    st.dataframe(st.session_state.players_df, use_container_width=True)
